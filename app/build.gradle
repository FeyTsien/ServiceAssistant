apply plugin: 'com.android.application'

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //高德地图配置开始
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86","x86_64"
        }
        //高德地图配置结束
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    //Add the following configuration
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    signingConfigs {
        release {
            try {
                storeFile file("../assistant.jks")
                storePassword "123456"
                keyAlias "key"
                keyPassword "123456"
            } catch (ex) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //support
    implementation rootProject.ext.support["appcompat-v7"]
    implementation rootProject.ext.support["design"]
    testImplementation rootProject.ext.support["junit"]
    implementation rootProject.ext.support["constraint-layout"]
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //===============================================================================================
    //自己的工具类
    implementation project(':tsienlibrary')

    //    配置方法数超过 64K 的应用
    implementation 'com.android.support:multidex:1.0.0'

    //一个 Android 系统的 View 注入框架，能够通过『注解』的方式来绑定 View 的属性或方法

    //    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

    //新加glide
    implementation rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]

    //    https://github.com/scwang90/SmartRefreshLayout(下拉刷新控件)
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-14'

    //没有使用特殊Header，可以不加这行
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-14'

    //https://github.com/XRecyclerView/XRecyclerView（一个retriclerview，实现了pullrefresh和加载更多特性。你可以像标准的recycling view一样使用它）
    implementation 'com.jcodecraeer:xrecyclerview:1.5.9'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    //高德地图配置====开始=======
    //2D地图so及jar
//    implementation 'com.amap.api:map2d:latest.integration'
    //3D地图so及jar
    implementation 'com.amap.api:3dmap:latest.integration'
//    //定位功能
    implementation 'com.amap.api:location:latest.integration'
//    //搜索功能
//    implementation 'com.amap.api:search:latest.integration'
    //高德地图配置=====结束========
}
